os: osx
osx_image: xcode12.2
language: node_js
node_js:
  - lts/*
cache:
  directories:
    - node_modules
    - "$HOME/.npm/_prebuilds"
    - "$HOME/.cache/electron"
    - "$HOME/.cache/electron-builder"
addons:
  homebrew:
    packages:
    - jq
before_install:
- |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
    export PATH="/tmp/git-lfs:$PATH"
  fi
install:
- npm install --global npm@latest
- rm -rf node_modules
- rm package-lock.json
- npm install
- sudo xcode-select -r
before_script:
- git lfs pull
- export BUILDVERSION="$(grep version package.json |sed "s/[^0-9.]//g").$(git log --format=%h -1)"
- if [ "$TRAVIS_OS_NAME" = osx ]; then chmod +x ./build/add-osx-cert.sh; fi
- if [ "$TRAVIS_OS_NAME" = osx ]; then ./build/add-osx-cert.sh; fi
script:
  - npm test -- --runInBand
after_success:
  - security find-identity -v
  - electron-builder --config build/electron-builder-mac-ci.yml -ml --publish never
  - ls -alr dist
  #- ./jsdoc.sh
notifications:
  slack:
    secure: fYGIkZMYp/HhRhi4/6Q1jpv0nWfpZaqaIKRhhloi+kBIt2fFun49LmTQfjqGLfwKKCKNmx8XzdIASUZuW7auJhHLUZPWaeEDxQjNVjrSOKOUuFUeGCKRJtw6+la0VxT79y5YIWxrnY2Noi8I6NvxniAJwnyQlHdyCnavmZzTA2xQGHxfTI4PR3ZkFt6lVAEC09NZMYwUf5+jsFmR6k/NGBU0jotDkfsm7AdzADSHwqfGvi70V9+muG4DIJejRVOkyCka2EOixbAyOOzbvrDwOo8tZVbY6Ch0LCfYndbDIztWXWb34R8LQEVKJA6QV2qMHmqSyMmR1RUO/OmMDmq+kM4C3M3D91knrugFVJiLJeowj8cb5LKgX35cd8/dHCDnLkSuaAw+rk5ny3TzfX2uh/EI9QN8y7S+er+QNvumy3M1+pkT+M+7t+auu0l7Ab+G/8W5X0PrZaQ+M933tYy1FC0zrp+CNs6BQnVvpql7REISJuuZ3T950FCxLM09XDGTnqxkgo8NrunuHcFgr8Jo74dl4TiixJteCVTOYI46KvfWDDlByKRmYb8GpQOXY4TT0dH5eEOjbcF3OFSQrx0aiC2TA6sTVHzvRqHdjjDGv2IXcJUJyLMnXrUsMVl4MuDCWGsqwKSEh71mflkreSc4yZ17M5ZEUBh90/dA9eICk9c=
env:
  global:
  - secure: yufxN+orgKMu4xSawX8oz6NeAtaTJSfOoTQuxGTI/W2vrkCadBu6p7yC2f7CiWGzGMzPCTG+HjT0+P6m1vFoFZgMZyFVvzGDA2Ec9exL3ZWZHwGVKm9C5SqiAzpzCZz7e5TBpv22hhBTP2JN0upNNd2KwN9sSpJUD5KNIMHLKYpbAl303y6po+sYkGKiw6WYZqPVpt27py6XLtgzlkj6LqGB4NP/uhQfxyRV9vXSFG6YenLBekKlYlSlaEMyvwezUthmyi9xyPSKLPg1xODayVlG7dXLEL6wjXjZQIWtokb2ogNCc9o47uDJbfesDfHingDhk4TYLDbF7TlE65mu2AToaPV7rZ5sPIJ4mhy7IO/jOPQiAgUFmky9rojfzOfGjSN6yMkuFbdnv1WnR6z/6kt4CfF4wHVoe2FLvZBGIE6TuIOdFG2LRSdoyZIK4cHLea3fVGHOLAS83V88gA72NOz+xNDKTvdBHSusNFrVSjjJq3m8mbGqg3shdzoi9/vUMgMh0nJ388TeSyKvchi0D3W3PfLWRy9FIEMV+TnSER4f83a02NIOtn2BVI2tSGzPbFDuzAlakq9nqklkX5WouyW791YcO/6tmP+V4ahFzX39NAgWguvqPEgwEOfG3JSvVDvMfGyoXyuoHvWPUD4aTWZ5lTITrJ3KiayYh/KoFiU=
  - secure: eXxUI/kBtBodrxBa7aLeGaO/1Xb3TLRV7CrcZYsuYFHlnGFZyPkgCrkE+AloNPtKuBJEwMyeg5DxQgBYHbLAorDp0Vl7Kgy/0NUvYOD9NWdi3zcnnZtb89Ob53VpfBp5z2eqaXzu+jFKIeyvIUHd1wWnsGWGxLs98+CK3ioWkXbtGuqkqlo7tHy9HXv5lgSzNldvPbLajxzv9JKhCq5moQ5hJabnoly7d1DCFGzhSObRRfjAWJevwQ/cVxWWBuv88R8+Dn3VAJecex4Z+BOwz/AY0YiqyglO9tytFSQkiWRiSR2M5c9xbTYxua8rgHEquUHTAwkEx3ND5lq2I7thr1Uote8nCyK7P1PuJg9CBq0ep3F0OF0S/D5g5MFIhUhDrUr2qDHdT+Ye0MIeyOHrGMjGyoG6Hs+S3nsvLgGoP/7kFyDJ2fJIfvZlHWR9BkKBrwvvJLuyLrVD63gTjwsFUwUmnHPTQ0INqAgur3Ih8RjpxLATJy+Cd5kkouVAabfyXmD8/ZAaFYK8Z39NsBEfUt1QvcSzwNQk/BRH3AGEd96Zg+qvVhQ3TmSrLBVbkU0/R4ol55u+D6z4T/J4eqU897UMa1XTen2oclxiVca0yCfw6F5cmGJRgaXATKGF1FcPtqdmI26ppTL9eVQmPMynTf9/IHOSo1/4Ow6dKyu19dE=
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: aptrust.public.download
    skip_cleanup: true
    local_dir: dist
    upload_dir: DART
    acl: public_read
    on:
      repo: APTrust/dart
      branch: master
  # - provider: pages
  #   cleanup: true
  #   token: "$GH_TOKEN"
  #   keep_history: true
  #   verbose: true
  #   local_dir: docs
